{"ast":null,"code":"var _jsxFileName = \"E:\\\\Jay-Files\\\\Code\\\\Projects\\\\ThreatIntel-AI\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState({\n    id: '1',\n    name: 'Demo User',\n    role: 'Admin'\n  });\n  const login = () => {\n    setUser({\n      id: '1',\n      name: 'Demo User',\n      role: 'Admin'\n    });\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"OujYQSXOa+2Ntg7j0RtT8CaJv+4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","id","name","role","login","logout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/Jay-Files/Code/Projects/ThreatIntel-AI/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: () => void;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>({\r\n    id: '1',\r\n    name: 'Demo User',\r\n    role: 'Admin'\r\n  });\r\n\r\n  const login = () => {\r\n    setUser({\r\n      id: '1',\r\n      name: 'Demo User',\r\n      role: 'Admin'\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        login,\r\n        logout,\r\n        isAuthenticated: !!user,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe5D,MAAMC,WAAW,gBAAGL,aAAa,CAAyB,IAAI,CAAC;AAE/D,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAc;IAC5CS,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBJ,OAAO,CAAC;MACNC,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBL,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACW,QAAQ;IACnBC,KAAK,EAAE;MACLR,IAAI;MACJK,KAAK;MACLC,MAAM;MACNG,eAAe,EAAE,CAAC,CAACT;IACrB,CAAE;IAAAF,QAAA,EAEDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CA/BWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAiCzB,OAAO,MAAMkB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGzB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}