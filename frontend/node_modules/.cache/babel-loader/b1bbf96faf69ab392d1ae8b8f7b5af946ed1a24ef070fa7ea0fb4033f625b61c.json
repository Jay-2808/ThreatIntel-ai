{"ast":null,"code":"var _jsxFileName = \"E:\\\\Jay-Files\\\\Code\\\\Projects\\\\ThreatIntel-AI\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create a demo user\nconst demoUser = {\n  id: '1',\n  name: 'Demo User',\n  role: 'admin'\n};\nconst AuthContext = /*#__PURE__*/createContext({\n  user: demoUser,\n  isAuthenticated: true\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user,\n      isLoading,\n      error,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","jsxDEV","_jsxDEV","demoUser","id","name","role","AuthContext","user","isAuthenticated","AuthProvider","children","Provider","value","login","logout","isLoading","error","clearError","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s","context","Error","$RefreshReg$"],"sources":["E:/Jay-Files/Code/Projects/ThreatIntel-AI/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\n// Create a demo user\r\nconst demoUser: User = {\r\n  id: '1',\r\n  name: 'Demo User',\r\n  role: 'admin'\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: demoUser,\r\n  isAuthenticated: true\r\n});\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        login,\r\n        logout,\r\n        isAuthenticated: !!user,\r\n        isLoading,\r\n        error,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAalD;AACA,MAAMC,QAAc,GAAG;EACrBC,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,WAAW,gBAAGR,aAAa,CAAkB;EACjDS,IAAI,EAAEL,QAAQ;EACdM,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAErF,oBACET,OAAA,CAACK,WAAW,CAACK,QAAQ;IACnBC,KAAK,EAAE;MACLL,IAAI;MACJM,KAAK;MACLC,MAAM;MACNN,eAAe,EAAE,CAAC,CAACD,IAAI;MACvBQ,SAAS;MACTC,KAAK;MACLC;IACF,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACC,EAAA,GAjBWb,YAAqD;AAmBlE,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAG1B,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}