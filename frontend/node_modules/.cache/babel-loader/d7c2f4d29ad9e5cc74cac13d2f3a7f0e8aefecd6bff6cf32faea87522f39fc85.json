{"ast":null,"code":"var _jsxFileName = \"E:\\\\Jay-Files\\\\Code\\\\Projects\\\\ThreatIntel-AI\\\\frontend\\\\src\\\\components\\\\training\\\\EmployeeProgress.tsx\";\nimport React from 'react';\nimport { Box, VStack, Heading, Progress, Text, Table, Thead, Tbody, Tr, Th, Td, Badge, HStack } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employees = [{\n  id: '1',\n  name: 'John Doe',\n  role: 'IT Manager',\n  completedModules: 8,\n  totalModules: 10,\n  lastActivity: '2025-10-01',\n  score: 92\n}, {\n  id: '2',\n  name: 'Jane Smith',\n  role: 'HR Specialist',\n  completedModules: 6,\n  totalModules: 10,\n  lastActivity: '2025-09-30',\n  score: 85\n}, {\n  id: '3',\n  name: 'Mike Johnson',\n  role: 'Developer',\n  completedModules: 9,\n  totalModules: 10,\n  lastActivity: '2025-10-02',\n  score: 95\n}];\nconst EmployeeProgress = () => {\n  const getScoreColor = score => {\n    if (score >= 90) return 'green';\n    if (score >= 70) return 'yellow';\n    return 'red';\n  };\n  const getProgressPercent = (completed, total) => Math.round(completed / total * 100);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"lg\",\n    boxShadow: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"md\",\n      mb: 4,\n      children: \"Team Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"simple\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"start\",\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"medium\",\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                color: \"gray.600\",\n                children: employee.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"start\",\n              spacing: 1,\n              minW: \"150px\",\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                w: \"100%\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  children: [employee.completedModules, \"/\", employee.totalModules, \" modules\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  fontWeight: \"medium\",\n                  children: [getProgressPercent(employee.completedModules, employee.totalModules), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Progress, {\n                value: getProgressPercent(employee.completedModules, employee.totalModules),\n                size: \"sm\",\n                width: \"100%\",\n                colorScheme: \"blue\",\n                borderRadius: \"full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              colorScheme: getScoreColor(employee.score),\n              fontSize: \"sm\",\n              px: 2,\n              py: 1,\n              borderRadius: \"full\",\n              children: [employee.score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = EmployeeProgress;\nexport default EmployeeProgress;\nvar _c;\n$RefreshReg$(_c, \"EmployeeProgress\");","map":{"version":3,"names":["React","Box","VStack","Heading","Progress","Text","Table","Thead","Tbody","Tr","Th","Td","Badge","HStack","jsxDEV","_jsxDEV","employees","id","name","role","completedModules","totalModules","lastActivity","score","EmployeeProgress","getScoreColor","getProgressPercent","completed","total","Math","round","p","bg","borderRadius","boxShadow","children","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","employee","align","spacing","fontWeight","fontSize","color","minW","justify","w","value","width","colorScheme","px","py","_c","$RefreshReg$"],"sources":["E:/Jay-Files/Code/Projects/ThreatIntel-AI/frontend/src/components/training/EmployeeProgress.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  VStack,\r\n  Heading,\r\n  Progress,\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Badge,\r\n  HStack,\r\n} from '@chakra-ui/react';\r\n\r\ninterface EmployeeStats {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  completedModules: number;\r\n  totalModules: number;\r\n  lastActivity: string;\r\n  score: number;\r\n}\r\n\r\nconst employees: EmployeeStats[] = [\r\n  {\r\n    id: '1',\r\n    name: 'John Doe',\r\n    role: 'IT Manager',\r\n    completedModules: 8,\r\n    totalModules: 10,\r\n    lastActivity: '2025-10-01',\r\n    score: 92,\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Jane Smith',\r\n    role: 'HR Specialist',\r\n    completedModules: 6,\r\n    totalModules: 10,\r\n    lastActivity: '2025-09-30',\r\n    score: 85,\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Mike Johnson',\r\n    role: 'Developer',\r\n    completedModules: 9,\r\n    totalModules: 10,\r\n    lastActivity: '2025-10-02',\r\n    score: 95,\r\n  },\r\n];\r\n\r\nconst EmployeeProgress = () => {\r\n  const getScoreColor = (score: number) => {\r\n    if (score >= 90) return 'green';\r\n    if (score >= 70) return 'yellow';\r\n    return 'red';\r\n  };\r\n\r\n  const getProgressPercent = (completed: number, total: number) => \r\n    Math.round((completed / total) * 100);\r\n\r\n  return (\r\n    <Box p={6} bg=\"white\" borderRadius=\"lg\" boxShadow=\"sm\">\r\n      <Heading size=\"md\" mb={4}>Team Progress</Heading>\r\n\r\n      <Table variant=\"simple\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Employee</Th>\r\n            <Th>Progress</Th>\r\n            <Th>Score</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {employees.map((employee) => (\r\n            <Tr key={employee.id}>\r\n              <Td>\r\n                <VStack align=\"start\" spacing={1}>\r\n                  <Text fontWeight=\"medium\">{employee.name}</Text>\r\n                  <Text fontSize=\"sm\" color=\"gray.600\">{employee.role}</Text>\r\n                </VStack>\r\n              </Td>\r\n              <Td>\r\n                <VStack align=\"start\" spacing={1} minW=\"150px\">\r\n                  <HStack justify=\"space-between\" w=\"100%\">\r\n                    <Text fontSize=\"sm\">\r\n                      {employee.completedModules}/{employee.totalModules} modules\r\n                    </Text>\r\n                    <Text fontSize=\"sm\" fontWeight=\"medium\">\r\n                      {getProgressPercent(employee.completedModules, employee.totalModules)}%\r\n                    </Text>\r\n                  </HStack>\r\n                  <Progress\r\n                    value={getProgressPercent(employee.completedModules, employee.totalModules)}\r\n                    size=\"sm\"\r\n                    width=\"100%\"\r\n                    colorScheme=\"blue\"\r\n                    borderRadius=\"full\"\r\n                  />\r\n                </VStack>\r\n              </Td>\r\n              <Td>\r\n                <Badge\r\n                  colorScheme={getScoreColor(employee.score)}\r\n                  fontSize=\"sm\"\r\n                  px={2}\r\n                  py={1}\r\n                  borderRadius=\"full\"\r\n                >\r\n                  {employee.score}%\r\n                </Badge>\r\n              </Td>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeeProgress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}